name: Build Debug APK (Install SDK reliably)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    env:
      ANDROID_SDK_ROOT: ${{ runner.temp }}/android-sdk
      ANDROID_HOME: ${{ runner.temp }}/android-sdk

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Create Android SDK dirs
        run: |
          mkdir -p "${ANDROID_SDK_ROOT}"
          mkdir -p "${ANDROID_SDK_ROOT}/cmdline-tools"

      - name: Download Android commandline tools
        run: |
          # command line tools URL - this is the generic latest "commandlinetools" URL
          # If this 404s in future, I'll update it. It usually works:
          cd "${ANDROID_SDK_ROOT}"
          wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O commandlinetools.zip
          unzip -q commandlinetools.zip -d cmdline-tools
          # move into expected path (cmdline-tools/latest)
          mkdir -p cmdline-tools/latest
          mv cmdline-tools/cmdline-tools/* cmdline-tools/latest/ || true
          rm commandlinetools.zip

      - name: Add sdkmanager & adb to PATH
        run: |
          echo "${ANDROID_SDK_ROOT}/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "${ANDROID_SDK_ROOT}/platform-tools" >> $GITHUB_PATH
          echo "${ANDROID_SDK_ROOT}/tools/bin" >> $GITHUB_PATH || true
          chmod +x "${ANDROID_SDK_ROOT}/cmdline-tools/latest/bin/"* || true

      - name: Install Android SDK components
        run: |
          # Accept licenses non-interactively then install packages
          yes | sdkmanager --licenses || true
          sdkmanager "platform-tools" "platforms;android-34" "build-tools;34.0.0" "platforms;android-33" || true

      - name: Verify installed SDK packages
        run: |
          sdkmanager --list_installed || true
          adb --version || true

      - name: Setup Gradle (provides 'gradle' command)
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: '8.5'

      - name: Build debug APK
        # use the gradle command provided by the gradle action
        run: gradle assembleDebug --no-daemon
        env:
          JAVA_HOME: ${{ env.JAVA_HOME }}

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-debug-apk
          path: app/build/outputs/apk/debug/app-debug.apk
